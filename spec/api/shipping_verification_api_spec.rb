=begin
#Avalara Shipping Verification for Beverage Alcohol

#API for evaluating transactions against direct-to-consumer Beverage Alcohol shipping regulations.  This API is currently in beta. 

The version of the OpenAPI document: 2.1.0-beta

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.3.1

=end

require 'spec_helper'
require 'json'

# Unit tests for AvalaraSdk::ShippingVerificationApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ShippingVerificationApi' do
  before do
    # run before each test
    config = AvalaraSdk::Configuration.new  
    config.username = ''
    config.password = ''
    config.environment='sandbox'
    config.debugging=true
    config.app_name="testApp"
    config.app_version="2.3.1"
    config.machine_name="AVL_WIN_007"
    # run before each test
    @api_client = AvalaraSdk::ApiClient.new(config)
    @api_instance = AvalaraSdk::Shipping::ShippingVerificationApi.new(@api_client)
  end

  after do
    # run after each test
  end

  describe 'test an instance of ShippingVerificationApi' do
    it 'should create an instance of ShippingVerificationApi' do
      expect(@api_instance).to be_instance_of(AvalaraSdk::Shipping::ShippingVerificationApi)
    end
  end

  # unit tests for deregister_shipment
  # Removes the transaction from consideration when evaluating regulations that span multiple transactions.
  # @param company_code The company code of the company that recorded the transaction
  # @param transaction_code The transaction code to retrieve
  # @param [Hash] opts the optional parameters
  # @option opts [String] :document_type (Optional): The document type of the transaction to operate on. If omitted, defaults to \&quot;SalesInvoice\&quot;
  # @return [nil]
  describe 'deregister_shipment test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for register_shipment
  # Registers the transaction so that it may be included when evaluating regulations that span multiple transactions.
  # @param company_code The company code of the company that recorded the transaction
  # @param transaction_code The transaction code to retrieve
  # @param [Hash] opts the optional parameters
  # @option opts [String] :document_type (Optional): The document type of the transaction to operate on. If omitted, defaults to \&quot;SalesInvoice\&quot;
  # @return [nil]
  describe 'register_shipment test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for register_shipment_if_compliant
  # Evaluates a transaction against a set of direct-to-consumer shipping regulations and, if compliant, registers the transaction so that it may be included when evaluating regulations that span multiple transactions.
  # @param company_code The company code of the company that recorded the transaction
  # @param transaction_code The transaction code to retrieve
  # @param [Hash] opts the optional parameters
  # @option opts [String] :document_type (Optional): The document type of the transaction to operate on. If omitted, defaults to \&quot;SalesInvoice\&quot;
  # @return [ShippingVerifyResult]
  describe 'register_shipment_if_compliant test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for verify_shipment
  # Evaluates a transaction against a set of direct-to-consumer shipping regulations.
  # The transaction and its lines must meet the following criteria in order to be evaluated: * The transaction must be recorded. Using a type of *SalesInvoice* is recommended. * A parameter with the name *AlcoholRouteType* must be specified and the value must be one of the following: &#39;*DTC*&#39;, &#39;*Retailer DTC*&#39; * A parameter with the name *RecipientName* must be specified and the value must be the name of the recipient. * Each alcohol line must include a *ContainerSize* parameter that describes the volume of a single container. Use the *unit* field to specify one of the following units: &#39;*Litre*&#39;, &#39;*Millilitre*&#39;, &#39;*gallon (US fluid)*&#39;, &#39;*quart (US fluid)*&#39;, &#39;*ounce (fluid US customary)*&#39; * Each alcohol line must include a *PackSize* parameter that describes the number of containers in a pack. Specify *Count* in the *unit* field.  Optionally, the transaction and its lines may use the following parameters: * The *ShipDate* parameter may be used if the date of shipment is different than the date of the transaction. The value should be ISO-8601 compliant (e.g. 2020-07-21). * The *RecipientDOB* parameter may be used to evaluate age restrictions. The value should be ISO-8601 compliant (e.g. 2020-07-21). * The *PurchaserDOB* parameter may be used to evaluate age restrictions. The value should be ISO-8601 compliant (e.g. 2020-07-21). * The *SalesLocation* parameter may be used to describe whether the sale was made *OnSite* or *OffSite*. *OffSite* is the default value. * The *AlcoholContent* parameter may be used to describe the alcohol percentage by volume of the item. Specify *Percentage* in the *unit* field.  **Security Policies** This API depends on all of the following active subscriptions: *AvaAlcohol, AutoAddress, AvaTaxPro*
  # @param company_code The company code of the company that recorded the transaction
  # @param transaction_code The transaction code to retrieve
  # @param [Hash] opts the optional parameters
  # @option opts [String] :document_type (Optional): The document type of the transaction to operate on. If omitted, defaults to \&quot;SalesInvoice\&quot;
  # @return [ShippingVerifyResult]
  describe 'verify_shipment test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
